import pandas as pd
import os
import shutil

def organize_images_by_class(
    csv_file_path,
    source_image_folder,
    destination_base_folder,
    image_column_name='image',
    class_column_name='level' # IMPORTANT: Change this to your actual class column name!
):
    """
    Reads a CSV file containing image paths and class labels, and moves images
    from a source folder into class-specific subfolders in a destination folder.

    Args:
        csv_file_path (str): The path to the input CSV file (e.g., 'train_qa_prep_updated.csv').
        source_image_folder (str): The path to the folder where the original images are located.
        destination_base_folder (str): The base folder where class subfolders will be created.
        image_column_name (str): The name of the column in the CSV that contains
                                 the image file names (e.g., 'image').
        class_column_name (str): The name of the column in the CSV that contains
                                 the class labels (e.g., 'class_label', 'category').
    """
    if not os.path.exists(csv_file_path):
        print(f"Error: CSV file not found at '{csv_file_path}'")
        return

    if not os.path.isdir(source_image_folder):
        print(f"Error: Source image folder not found at '{source_image_folder}'")
        return

    # Create the base destination folder if it doesn't exist
    os.makedirs(destination_base_folder, exist_ok=True)
    print(f"Ensured destination base folder exists: '{destination_base_folder}'")

    try:
        df = pd.read_csv(csv_file_path)
    except Exception as e:
        print(f"Error reading CSV file: {e}")
        return

    if image_column_name not in df.columns:
        print(f"Error: Image column '{image_column_name}' not found in the CSV file.")
        print(f"Available columns are: {df.columns.tolist()}")
        return

    if class_column_name not in df.columns:
        print(f"Error: Class column '{class_column_name}' not found in the CSV file.")
        print(f"Available columns are: {df.columns.tolist()}")
        return

    print(f"Processing {len(df)} entries from '{csv_file_path}'...")

    moved_count = 0
    skipped_count = 0
    error_count = 0

    # Iterate through each row in the DataFrame
    for index, row in df.iterrows():
        image_filename = str(row[image_column_name])
        class_label = str(row[class_column_name])

        source_path = os.path.join(source_image_folder, image_filename)
        destination_class_folder = os.path.join(destination_base_folder, class_label)
        destination_path = os.path.join(destination_class_folder, image_filename)

        # Create the class-specific subfolder if it doesn't exist
        os.makedirs(destination_class_folder, exist_ok=True)

        if not os.path.exists(source_path):
            print(f"Warning: Source image not found, skipping: '{source_path}'")
            skipped_count += 1
            continue

        if os.path.exists(destination_path):
            print(f"Info: Image already exists in destination, skipping move: '{destination_path}'")
            skipped_count += 1
            continue

        try:
            shutil.move(source_path, destination_path)
            moved_count += 1
            if moved_count % 50 == 0:
                print(f"Moved {moved_count} images so far...")
        except Exception as e:
            print(f"Error moving '{source_path}' to '{destination_path}': {e}")
            error_count += 1

    print("\n--- Image Organization Summary ---")
    print(f"Total entries processed from CSV: {len(df)}")
    print(f"Images successfully moved: {moved_count}")
    print(f"Images skipped (not found at source or already in destination): {skipped_count}")
    print(f"Errors encountered during move: {error_count}")
    print(f"Images are now organized in '{destination_base_folder}' by class.")


# --- How to use this script ---
if __name__ == "__main__":
    # IMPORTANT: Set these paths to your actual file and folder locations
    csv_file = 'test_qa_prep_updated.csv' # The CSV file generated by the previous script
    source_folder = 'test_qa_prep'      # The folder where your images currently reside

    # This is where the new class subfolders and organized images will be placed
    # You can change 'organized_images' to any name you prefer.
    destination_folder = 'test_qa_prep_organized'

    # IMPORTANT: Set this to the actual column name in your CSV that contains the class labels
    # For example, if your CSV has a column named 'category', change 'class_label' to 'category'.
    class_column = 'level' # <--- !!! YOU MUST CHANGE THIS !!!

    organize_images_by_class(
        csv_file_path=csv_file,
        source_image_folder=source_folder,
        destination_base_folder=destination_folder,
        image_column_name='image', # This was confirmed as 'image' in previous steps
        class_column_name=class_column
    )

    print("\nScript finished. Check the new destination folder for organized images.")
    print("Remember to install pandas if you haven't: pip install pandas")

